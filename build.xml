<?xml version="1.0" encoding="UTF-8"?>
<project name="hw1" default="dist" basedir=".">

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="library"  location="library"/>
  
  <!-- codebase properties -->
  <property name="computer_file_codebase" location="build/system/" />
  <property name="computer_web_codebase" value="http://www.cs.ucsb.edu/~cappello/cs290b/hw1/computer/" />  
  <property name="client_file_codebase" location="build/client/" />
  <property name="client_web_codebase" value="http://www.cs.ucsb.edu/~cappello/cs290b/hw1/client/" />

  <target name="compile" description="compile the source">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>  
  
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}">
		<classpath>
			<fileset dir="${library}">
				<include name="**/*.jar" />
			</fileset>
         </classpath>
	</javac>
  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Make computer jar file -->
    <jar jarfile="${dist}/computer.jar" basedir="${build}" includes="system/** api/** tasks/**">
<<<<<<< HEAD
      <zipgroupfileset dir="${library}" includes="**/*.jar"/>
    </jar>    
=======
		<zipgroupfileset dir="${library}" includes="**/*.jar"/>
	</jar>
    
>>>>>>> master
    <!-- Make client jar file -->
    <jar jarfile="${dist}/client.jar" basedir="${build}" includes="client/** api/** tasks/**">
		  <zipgroupfileset dir="${library}" includes="**/*.jar"/>
	 </jar>
    <!-- Copy client's task classes to client's codebase --> 
    <mkdir dir="${client_file_codebase}/tasks"/>
    <copy todir="${client_file_codebase}/tasks">
      <fileset dir="${build}/tasks/"/>
    </copy>
  </target>
  
  <target name="javadoc" description="create javadocs">
  	<javadoc packagenames="tasks.*,api.*" sourcepath="${src}" destdir="documents/javadoc" />
  </target>
  
  <target name="runComputer" description="run computer" >
  	<java classname="system.ComputerImpl" fork="true">
   
  	  <jvmarg value="-Djava.rmi.server.codebase=file://C:/Users/ethan_000/AndroidStudioProjects/CS290B-H1/dist/client.jar"/>
      
      <jvmarg value="-Djava.security.policy=policy.txt"/>
  	  <classpath>
  	    <pathelement location="dist/computer.jar"/>
  	  </classpath>
  	</java>
  </target>  
  
  <target name="runClient" description="run client" >
  	<java classname="client.Client" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy.txt"/>
  	  <arg value="localhost"/>
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	  </classpath>
  	</java>
  </target>
  
  <target name="runMClient" description="run client" >
  	<java classname="client.ClientMandelbrotSet" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy.txt"/>
  	  <arg value="128.111.43.14"/>
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	  </classpath>
  	</java>
  </target>
  
  <target name="runEClient" description="run client" >
  	<java classname="client.ClientEuclideanTsp" fork="true">
<<<<<<< HEAD
      <!--
  	  <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
  	  -->
      <jvmarg value="-Djava.security.policy=policy.txt"/>
=======
  	  <jvmarg value="-Djava.rmi.server.codebase=file://C:/Users/ethan_000/AndroidStudioProjects/CS290B-H1/dist/client.jar"/>
  	  <jvmarg value="-Djava.security.policy=policy.txt"/>
>>>>>>> master
  	  <arg value="localhost"/>
      
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	  </classpath>
  	</java>
  </target>

  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${client_file_codebase}/tasks"/>
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  
</project>

